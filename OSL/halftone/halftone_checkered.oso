OpenShadingLanguage 1.00
# Compiled by oslc 1.9.9
# options: -o C:\Users\moses\AppData\Local\Temp\tmpbz4b_539.oso -IC:\Users\moses\Apps\blender-2.80rc1-windows64\2.80\scripts\addons\cycles\shader
shader halftone_checkered
param	vector	uvw	0 0 0		%read{56,56} %write{1,1} %initexpr
param	vector	norm	0 0 0		%read{75,75} %write{2,2} %initexpr
param	float	angle	45		%read{5,5} %write{2147483647,-1}
param	color	color_1	0 0 0		%read{73,74} %write{2147483647,-1}
param	color	color_2	1 1 1		%read{73,74} %write{2147483647,-1}
param	float	frequency	1		%read{60,64} %write{2147483647,-1}
param	float	length_x	0		%read{62,62} %write{2147483647,-1}
oparam	color	out	0 0 0		%read{2147483647,-1} %write{74,74}
param	float	roughness	0		%read{75,75} %write{2147483647,-1}
param	float	size	0.5		%read{75,75} %write{2147483647,-1}
oparam	closure color	BSDF			%read{2147483647,-1} %write{76,76}
global	point	P	%read{1,1} %write{2147483647,-1}
global	normal	N	%read{2,2} %write{2147483647,-1}
local	vector	___233_axis	%read{13,15} %write{9,9}
local	float	___233_cosang	%read{12,53} %write{11,11}
local	float	___233_sinang	%read{23,48} %write{10,10}
local	float	___233_cosang1	%read{22,47} %write{12,12}
local	float	___233_x	%read{16,48} %write{13,13}
local	float	___233_y	%read{21,46} %write{14,14}
local	float	___233_z	%read{23,51} %write{15,15}
local	matrix	___233_M	%read{57,57} %write{55,55}
local	vector	pos	%read{59,63} %write{58,58}
local	float	line_x	%read{67,67} %write{62,62}
local	float	line_y	%read{67,67} %write{66,66}
local	float	total	%read{73,74} %write{72,72}
local	color	col	%read{76,76} %write{73,73}
const	string	$const1	"raster"		%read{1,1} %write{2147483647,-1}
const	string	$const2	"transform"		%read{0,0} %write{2147483647,-1}
const	string	$const3	"common"		%read{1,1} %write{2147483647,-1}
temp	float	$tmp1	%read{10,11} %write{5,5}
const	string	$const4	"radians"		%read{3,3} %write{2147483647,-1}
const	float	$const5	3.1415927		%read{4,4} %write{2147483647,-1}
const	float	$const6	180		%read{4,4} %write{2147483647,-1}
temp	float	$tmp2	%read{5,5} %write{4,4}
const	float	$const7	0		%read{6,66} %write{2147483647,-1}
temp	point	$tmp3	%read{8,58} %write{6,6}
const	vector	$const8	0 0 1		%read{8,8} %write{2147483647,-1}
const	string	$const9	"rotate"		%read{7,7} %write{2147483647,-1}
temp	vector	$tmp5	%read{9,9} %write{8,8}
const	float	$const10	1		%read{12,55} %write{2147483647,-1}
const	int	$const11	0		%read{13,59} %write{2147483647,-1}
const	int	$const12	1		%read{14,63} %write{2147483647,-1}
const	int	$const13	2		%read{15,15} %write{2147483647,-1}
temp	float	$tmp6	%read{20,20} %write{16,16}
temp	float	$tmp7	%read{18,18} %write{17,17}
temp	float	$tmp8	%read{19,19} %write{18,18}
temp	float	$tmp9	%read{20,20} %write{19,19}
temp	float	$tmp10	%read{55,55} %write{20,20}
temp	float	$tmp11	%read{22,22} %write{21,21}
temp	float	$tmp12	%read{24,24} %write{22,22}
temp	float	$tmp13	%read{24,24} %write{23,23}
temp	float	$tmp14	%read{55,55} %write{24,24}
temp	float	$tmp15	%read{26,26} %write{25,25}
temp	float	$tmp16	%read{28,28} %write{26,26}
temp	float	$tmp17	%read{28,28} %write{27,27}
temp	float	$tmp18	%read{55,55} %write{28,28}
temp	float	$tmp19	%read{30,30} %write{29,29}
temp	float	$tmp20	%read{32,32} %write{30,30}
temp	float	$tmp21	%read{32,32} %write{31,31}
temp	float	$tmp22	%read{55,55} %write{32,32}
temp	float	$tmp23	%read{37,37} %write{33,33}
temp	float	$tmp24	%read{35,35} %write{34,34}
temp	float	$tmp25	%read{36,36} %write{35,35}
temp	float	$tmp26	%read{37,37} %write{36,36}
temp	float	$tmp27	%read{55,55} %write{37,37}
temp	float	$tmp28	%read{39,39} %write{38,38}
temp	float	$tmp29	%read{41,41} %write{39,39}
temp	float	$tmp30	%read{41,41} %write{40,40}
temp	float	$tmp31	%read{55,55} %write{41,41}
temp	float	$tmp32	%read{43,43} %write{42,42}
temp	float	$tmp33	%read{45,45} %write{43,43}
temp	float	$tmp34	%read{45,45} %write{44,44}
temp	float	$tmp35	%read{55,55} %write{45,45}
temp	float	$tmp36	%read{47,47} %write{46,46}
temp	float	$tmp37	%read{49,49} %write{47,47}
temp	float	$tmp38	%read{49,49} %write{48,48}
temp	float	$tmp39	%read{55,55} %write{49,49}
temp	float	$tmp40	%read{54,54} %write{50,50}
temp	float	$tmp41	%read{52,52} %write{51,51}
temp	float	$tmp42	%read{53,53} %write{52,52}
temp	float	$tmp43	%read{54,54} %write{53,53}
temp	float	$tmp44	%read{55,55} %write{54,54}
temp	vector	$tmp45	%read{58,58} %write{57,57}
temp	vector	$tmp46	%read{57,57} %write{56,56}
const	float	$const14	-0.1		%read{62,66} %write{2147483647,-1}
temp	float	$tmp47	%read{62,62} %write{61,61}
temp	float	$tmp48	%read{60,60} %write{59,59}
temp	float	$tmp49	%read{61,61} %write{60,60}
temp	float	$tmp50	%read{66,66} %write{65,65}
temp	float	$tmp51	%read{64,64} %write{63,63}
temp	float	$tmp52	%read{65,65} %write{64,64}
temp	float	$tmp53	%read{69,72} %write{67,67}
const	float	$const15	2		%read{69,71} %write{2147483647,-1}
const	string	$const16	"mod"		%read{68,68} %write{2147483647,-1}
temp	float	$tmp54	%read{71,71} %write{70,70}
temp	float	$tmp55	%read{70,70} %write{69,69}
temp	float	$tmp56	%read{72,72} %write{71,71}
temp	closure color	$tmp57	%read{76,76} %write{75,75}
const	string	$const17	"diffuse_toon"		%read{75,75} %write{2147483647,-1}
code uvw
# C:\Users\moses\Design\experiments\..\..\Dev\Shaders\OSL\halftone\halftone_checkered.osl:7
#     vector uvw = transform("raster", P),
	functioncall	$const2 2 	%filename{"C:\Users\moses\Design\experiments\..\..\Dev\Shaders\OSL\halftone\halftone_checkered.osl"} %line{7} %argrw{"r"}
# 2.80\scripts\addons\cycles\shader\stdosl.h:379
#   return transform("common", to, p);
	transform	uvw $const3 $const1 P 	%filename{"2.80\scripts\addons\cycles\shader\stdosl.h"} %line{379} %argrw{"wrrr"}
code norm
# C:\Users\moses\Design\experiments\..\..\Dev\Shaders\OSL\halftone\halftone_checkered.osl:8
#     vector norm = N,
	assign		norm N 	%filename{"C:\Users\moses\Design\experiments\..\..\Dev\Shaders\OSL\halftone\halftone_checkered.osl"} %line{8} %argrw{"wr"}
code ___main___
# C:\Users\moses\Design\experiments\..\..\Dev\Shaders\OSL\halftone\halftone_checkered.osl:21
#     vector pos = rotate(uvw, radians(angle), 0.0, vector(0.0,0.0,1.0));
	functioncall	$const4 6 	%filename{"C:\Users\moses\Design\experiments\..\..\Dev\Shaders\OSL\halftone\halftone_checkered.osl"} %line{21} %argrw{"r"}
# 2.80\scripts\addons\cycles\shader\stdosl.h:112
#   return x * (M_PI / 180.0);
	div		$tmp2 $const5 $const6 	%filename{"2.80\scripts\addons\cycles\shader\stdosl.h"} %line{112} %argrw{"wrr"}
	mul		$tmp1 angle $tmp2 	%argrw{"wrr"}
# C:\Users\moses\Design\experiments\..\..\Dev\Shaders\OSL\halftone\halftone_checkered.osl:21
#     vector pos = rotate(uvw, radians(angle), 0.0, vector(0.0,0.0,1.0));
	assign		$tmp3 $const7 	%filename{"C:\Users\moses\Design\experiments\..\..\Dev\Shaders\OSL\halftone\halftone_checkered.osl"} %line{21} %argrw{"wr"}
	functioncall	$const9 59 	%argrw{"r"}
# 2.80\scripts\addons\cycles\shader\stdosl.h:387
#   vector axis = normalize(b - a);
	sub		$tmp5 $const8 $tmp3 	%filename{"2.80\scripts\addons\cycles\shader\stdosl.h"} %line{387} %argrw{"wrr"}
	normalize	___233_axis $tmp5 	%argrw{"wr"}
# 2.80\scripts\addons\cycles\shader\stdosl.h:401
#   sinang = sin(angle);
	sin		___233_sinang $tmp1 	%line{401} %argrw{"wr"}
# 2.80\scripts\addons\cycles\shader\stdosl.h:402
#   cosang = cos(angle);
	cos		___233_cosang $tmp1 	%line{402} %argrw{"wr"}
# 2.80\scripts\addons\cycles\shader\stdosl.h:403
# #endif
	sub		___233_cosang1 $const10 ___233_cosang 	%line{403} %argrw{"wrr"}
# 2.80\scripts\addons\cycles\shader\stdosl.h:404
#   float cosang1 = 1.0 - cosang;
	compref		___233_x ___233_axis $const11 	%line{404} %argrw{"wrr"}
	compref		___233_y ___233_axis $const12 	%argrw{"wrr"}
	compref		___233_z ___233_axis $const13 	%argrw{"wrr"}
# 2.80\scripts\addons\cycles\shader\stdosl.h:405
#   float x = axis[0], y = axis[1], z = axis[2];
	mul		$tmp6 ___233_x ___233_x 	%line{405} %argrw{"wrr"}
	mul		$tmp7 ___233_x ___233_x 	%argrw{"wrr"}
	sub		$tmp8 $const10 $tmp7 	%argrw{"wrr"}
	mul		$tmp9 $tmp8 ___233_cosang 	%argrw{"wrr"}
	add		$tmp10 $tmp6 $tmp9 	%argrw{"wrr"}
# 2.80\scripts\addons\cycles\shader\stdosl.h:406
#   matrix M = matrix(x * x + (1.0 - x * x) * cosang,
	mul		$tmp11 ___233_x ___233_y 	%line{406} %argrw{"wrr"}
	mul		$tmp12 $tmp11 ___233_cosang1 	%argrw{"wrr"}
	mul		$tmp13 ___233_z ___233_sinang 	%argrw{"wrr"}
	add		$tmp14 $tmp12 $tmp13 	%argrw{"wrr"}
# 2.80\scripts\addons\cycles\shader\stdosl.h:407
#                     x * y * cosang1 + z * sinang,
	mul		$tmp15 ___233_x ___233_z 	%line{407} %argrw{"wrr"}
	mul		$tmp16 $tmp15 ___233_cosang1 	%argrw{"wrr"}
	mul		$tmp17 ___233_y ___233_sinang 	%argrw{"wrr"}
	sub		$tmp18 $tmp16 $tmp17 	%argrw{"wrr"}
# 2.80\scripts\addons\cycles\shader\stdosl.h:409
#                     0.0,
	mul		$tmp19 ___233_x ___233_y 	%line{409} %argrw{"wrr"}
	mul		$tmp20 $tmp19 ___233_cosang1 	%argrw{"wrr"}
	mul		$tmp21 ___233_z ___233_sinang 	%argrw{"wrr"}
	sub		$tmp22 $tmp20 $tmp21 	%argrw{"wrr"}
# 2.80\scripts\addons\cycles\shader\stdosl.h:410
#                     x * y * cosang1 - z * sinang,
	mul		$tmp23 ___233_y ___233_y 	%line{410} %argrw{"wrr"}
	mul		$tmp24 ___233_y ___233_y 	%argrw{"wrr"}
	sub		$tmp25 $const10 $tmp24 	%argrw{"wrr"}
	mul		$tmp26 $tmp25 ___233_cosang 	%argrw{"wrr"}
	add		$tmp27 $tmp23 $tmp26 	%argrw{"wrr"}
# 2.80\scripts\addons\cycles\shader\stdosl.h:411
#                     y * y + (1.0 - y * y) * cosang,
	mul		$tmp28 ___233_y ___233_z 	%line{411} %argrw{"wrr"}
	mul		$tmp29 $tmp28 ___233_cosang1 	%argrw{"wrr"}
	mul		$tmp30 ___233_x ___233_sinang 	%argrw{"wrr"}
	add		$tmp31 $tmp29 $tmp30 	%argrw{"wrr"}
# 2.80\scripts\addons\cycles\shader\stdosl.h:413
#                     0.0,
	mul		$tmp32 ___233_x ___233_z 	%line{413} %argrw{"wrr"}
	mul		$tmp33 $tmp32 ___233_cosang1 	%argrw{"wrr"}
	mul		$tmp34 ___233_y ___233_sinang 	%argrw{"wrr"}
	add		$tmp35 $tmp33 $tmp34 	%argrw{"wrr"}
# 2.80\scripts\addons\cycles\shader\stdosl.h:414
#                     x * z * cosang1 + y * sinang,
	mul		$tmp36 ___233_y ___233_z 	%line{414} %argrw{"wrr"}
	mul		$tmp37 $tmp36 ___233_cosang1 	%argrw{"wrr"}
	mul		$tmp38 ___233_x ___233_sinang 	%argrw{"wrr"}
	sub		$tmp39 $tmp37 $tmp38 	%argrw{"wrr"}
# 2.80\scripts\addons\cycles\shader\stdosl.h:415
#                     y * z * cosang1 - x * sinang,
	mul		$tmp40 ___233_z ___233_z 	%line{415} %argrw{"wrr"}
	mul		$tmp41 ___233_z ___233_z 	%argrw{"wrr"}
	sub		$tmp42 $const10 $tmp41 	%argrw{"wrr"}
	mul		$tmp43 $tmp42 ___233_cosang 	%argrw{"wrr"}
	add		$tmp44 $tmp40 $tmp43 	%argrw{"wrr"}
# 2.80\scripts\addons\cycles\shader\stdosl.h:420
#                     0.0,
	matrix		___233_M $tmp10 $tmp14 $tmp18 $const7 $tmp22 $tmp27 $tmp31 $const7 $tmp35 $tmp39 $tmp44 $const7 $const7 $const7 $const7 $const10 	%line{420} %argrw{"wrrrrrrrrrrrrrrrr"}
# 2.80\scripts\addons\cycles\shader\stdosl.h:421
#                     1.0);
	sub		$tmp46 uvw $tmp3 	%line{421} %argrw{"wrr"}
	transformv	$tmp45 ___233_M $tmp46 	%argrw{"wrr"}
	add		pos $tmp45 $tmp3 	%argrw{"wrr"}
# C:\Users\moses\Design\experiments\..\..\Dev\Shaders\OSL\halftone\halftone_checkered.osl:25
#     float line_x = smoothstep(-0.1,length_x, sin(pos[0] / frequency));
	compref		$tmp48 pos $const11 	%filename{"C:\Users\moses\Design\experiments\..\..\Dev\Shaders\OSL\halftone\halftone_checkered.osl"} %line{25} %argrw{"wrr"}
	div		$tmp49 $tmp48 frequency 	%argrw{"wrr"}
	sin		$tmp47 $tmp49 	%argrw{"wr"}
	smoothstep	line_x $const14 length_x $tmp47 	%argrw{"wrrr"}
# C:\Users\moses\Design\experiments\..\..\Dev\Shaders\OSL\halftone\halftone_checkered.osl:26
#     float line_y = smoothstep(-0.1,0.0, sin(pos[1] / frequency));
	compref		$tmp51 pos $const12 	%line{26} %argrw{"wrr"}
	div		$tmp52 $tmp51 frequency 	%argrw{"wrr"}
	sin		$tmp50 $tmp52 	%argrw{"wr"}
	smoothstep	line_y $const14 $const7 $tmp50 	%argrw{"wrrr"}
# C:\Users\moses\Design\experiments\..\..\Dev\Shaders\OSL\halftone\halftone_checkered.osl:28
#     float total = mod(line_x+line_y, 2.0);
	add		$tmp53 line_x line_y 	%line{28} %argrw{"wrr"}
	functioncall	$const16 73 	%argrw{"r"}
# 2.80\scripts\addons\cycles\shader\stdosl.h:207
#   return a - b * floor(a / b);
	div		$tmp55 $tmp53 $const15 	%filename{"2.80\scripts\addons\cycles\shader\stdosl.h"} %line{207} %argrw{"wrr"}
	floor		$tmp54 $tmp55 	%argrw{"wr"}
	mul		$tmp56 $const15 $tmp54 	%argrw{"wrr"}
	sub		total $tmp53 $tmp56 	%argrw{"wrr"}
# C:\Users\moses\Design\experiments\..\..\Dev\Shaders\OSL\halftone\halftone_checkered.osl:29
#     color col = mix(color_1, color_2, total);
	mix		col color_1 color_2 total 	%filename{"C:\Users\moses\Design\experiments\..\..\Dev\Shaders\OSL\halftone\halftone_checkered.osl"} %line{29} %argrw{"wrrr"}
# C:\Users\moses\Design\experiments\..\..\Dev\Shaders\OSL\halftone\halftone_checkered.osl:30
#     out = mix(color_1, color_2, total);
	mix		out color_1 color_2 total 	%line{30} %argrw{"wrrr"}
# C:\Users\moses\Design\experiments\..\..\Dev\Shaders\OSL\halftone\halftone_checkered.osl:33
#     BSDF = diffuse_toon(norm, size, roughness)*col;
	closure		$tmp57 $const17 norm size roughness 	%line{33} %argrw{"wrrrr"}
	mul		BSDF $tmp57 col 	%argrw{"wrr"}
	end
