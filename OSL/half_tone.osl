shader halftone(
	vector uvw = transform("raster",P),
    float input = 0,
    float scale = 1,
    float angle = 45,
    float blend = 0.5,
    color col_in = color(1, 1, 1),
	color col_in_2 = color(0,0,0),
    float intensity = 1,
    output color col_out = color(0, 0, 0)
)
{
    vector pos = rotate(uvw, radians(angle), 0.0, vector(0.0,0.0,1.0));
    pos = vector(pos[0]/scale, pos[1]/scale, pos[2]);
    //pos = floor(pos);

    //if return 0 or 1 depending on respective component of the pos vector
     /***
	float line_x = mod(pos[0] -input, 2); 
    float line_y = mod(pos[1] -input, 2); 
    ****/

    
    //works similar to modulus
    float line_x = smoothstep(-blend, 1.0, sin(pos[0]) - input);
    float line_y = smoothstep(-blend, 1.0, sin(pos[1]) - input);
    
    

    //divide to get grid
    float tone = line_x*line_y;
    

    col_out = ((1.0 - tone)*col_in)*intensity;
    //col_out = col_out * col_in;
}